BLRP - PHP Implementation Design Notes

The main design goals of the code are simplicity, extensibility and 
reusability. By this I mean code that is made up mainly of algorithms that are 
easily understood, easy to make changes to and useful for other purposes (in 
whole or in part).

There are two pieces to this code; the specification, which is known as the 
Rules Language; the processor, which is the code that implements to the 
specification.

There are three sections, or areas, of the PHP code:

The Data Function

This manages the list of rules (see RULES.INI). The rules are stored in a 
static associative array and the function provides an index into the data. 
Meta data, for special variables, are stored within the rules array in an 
array member named '_vars'.

In addition to the Data Function there is a very simple INI file load function 
-- a simplified version of parse_ini_file().

The Rules Run Function

This is the external entry point that executes the rule language.

Implementation Support Functions

The rules execution functionality is split up into functions, run in a 
particular order, that do most of the work. These functions mirror the basic 
sections of the specification (as outlined in the file RULES.TXT). They are:

	Argument Interpolation
	Search and Replace
	File Operations
	R-Value Operations
	Conditional/Arithmetic Tests
	Special Command Handling

Each of these support functions may have their own meta data to match the 
specification to PHP functionality, and stores rule state data via the rule 
data function.
